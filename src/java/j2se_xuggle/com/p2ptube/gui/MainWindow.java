
/*
 * MainWindow.java
 *
 */
package com.p2ptube.gui;

import com.p2ptube.peer.P2PTubePeer;
import com.p2ptube.kb.P2PTubeKB;
import com.p2ptube.listModel.ConnectedPeers;
import com.p2ptube.listModel.ElementInList;
import com.p2ptube.listModel.PeerInList;
import com.p2ptube.listModel.PeerMedia;
import com.p2ptube.media.view.MediaLoader;
import com.p2ptube.media.view.VideoPlayer;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;

/**
 *
 * @author RW
 */
public class MainWindow extends javax.swing.JFrame {

    /** Creates new form MainWindow */
    private P2PTubePeer peer;
    private MediaLoader loader;

    public MainWindow() {
        initComponents();

        //Load the shark images and p2ptube images
        try {
            BufferedImage bi = ImageIO.read(this.getClass().getResource("/com/p2ptube/gui/resources/shark.jpg"));
            sharkImage.setImage(bi);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.sharkImage.setImageSize(new Dimension(108, 59));
        this.sharkImage.setRunning(false);

        try {
            BufferedImage bi = ImageIO.read(this.getClass().getResource("/com/p2ptube/gui/resources/welcome.jpg"));
            p2ptubeImage.setImage(bi);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.p2ptubeImage.setImageSize(new Dimension(108, 59));
        this.p2ptubeImage.setRunning(false);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMovieDialog = new javax.swing.JDialog();
        addMediaButton = new javax.swing.JButton();
        filenameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nameOfMedia = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        saveMediaButton = new javax.swing.JButton();
        mediaType = new javax.swing.JComboBox();
        fileChooser = new javax.swing.JFileChooser();
        previewScreen = new javax.swing.JDialog();
        previewVideoPanel = new com.p2ptube.media.view.VideoPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        typeOfFile = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nameOfMediaInProgress = new javax.swing.JTextField();
        previewCloseButton = new javax.swing.JButton();
        addPeerDialog = new javax.swing.JDialog();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        addPeerDialogButton = new javax.swing.JButton();
        urlOfPeer = new javax.swing.JTextField();
        nameOfPeer = new javax.swing.JTextField();
        movieName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        peersList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        mediaList = new javax.swing.JList();
        addMovieButton = new javax.swing.JButton();
        addPeerButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        playButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        jSlider2 = new javax.swing.JSlider();
        jSlider1 = new javax.swing.JSlider();
        jToggleButton1 = new javax.swing.JToggleButton();
        portField = new javax.swing.JTextField();
        connectButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        videoPanel = new com.p2ptube.media.view.VideoPanel();
        updateMedia = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        typeFilterOfPeer = new javax.swing.JComboBox();
        staticImages = new javax.swing.JPanel();
        sharkImage = new com.p2ptube.media.view.ImageDraw();
        p2ptubeImage = new com.p2ptube.media.view.ImageDraw();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        addMovieDialog.setLocationByPlatform(true);

        addMediaButton.setText("Choose a File");
        addMediaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMediaButtonActionPerformed(evt);
            }
        });

        filenameTextField.setText("Please choose a File...");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Name:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Type:");

        saveMediaButton.setText("Save Media");
        saveMediaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMediaButtonActionPerformed(evt);
            }
        });

        mediaType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Movie", "Audio", "Image", "Media" }));

        javax.swing.GroupLayout addMovieDialogLayout = new javax.swing.GroupLayout(addMovieDialog.getContentPane());
        addMovieDialog.getContentPane().setLayout(addMovieDialogLayout);
        addMovieDialogLayout.setHorizontalGroup(
            addMovieDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMovieDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addMovieDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addMovieDialogLayout.createSequentialGroup()
                        .addGroup(addMovieDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addMediaButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addMovieDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mediaType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addMovieDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameOfMedia)
                                .addComponent(filenameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE))))
                    .addComponent(saveMediaButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addMovieDialogLayout.setVerticalGroup(
            addMovieDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMovieDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addMovieDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMediaButton)
                    .addComponent(filenameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMovieDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameOfMedia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addMovieDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(mediaType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(saveMediaButton)
                .addContainerGap())
        );

        previewScreen.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        previewScreen.setLocationByPlatform(true);

        previewVideoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Media"));
        previewVideoPanel.setImage(null);

        jLabel3.setText("Media Added");

        jLabel4.setText("Type:");

        jLabel6.setText("Name:");

        previewCloseButton.setText("Close Preview");
        previewCloseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previewCloseButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout previewScreenLayout = new javax.swing.GroupLayout(previewScreen.getContentPane());
        previewScreen.getContentPane().setLayout(previewScreenLayout);
        previewScreenLayout.setHorizontalGroup(
            previewScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(previewScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(previewScreenLayout.createSequentialGroup()
                        .addGroup(previewScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(previewScreenLayout.createSequentialGroup()
                                .addGroup(previewScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(previewScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nameOfMediaInProgress)
                                    .addComponent(typeOfFile, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)))
                            .addComponent(previewCloseButton))
                        .addGap(18, 18, 18)
                        .addComponent(previewVideoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        previewScreenLayout.setVerticalGroup(
            previewScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(previewScreenLayout.createSequentialGroup()
                .addGroup(previewScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(previewScreenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(53, 53, 53)
                        .addGroup(previewScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeOfFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(previewScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(nameOfMediaInProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(previewCloseButton))
                    .addGroup(previewScreenLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(previewVideoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addPeerDialog.setTitle("Add Peer");

        jLabel7.setText("URL");

        jLabel8.setText("Name");

        addPeerDialogButton.setText("Add Peer");
        addPeerDialogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPeerDialogButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addPeerDialogLayout = new javax.swing.GroupLayout(addPeerDialog.getContentPane());
        addPeerDialog.getContentPane().setLayout(addPeerDialogLayout);
        addPeerDialogLayout.setHorizontalGroup(
            addPeerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPeerDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPeerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addPeerDialogButton)
                    .addGroup(addPeerDialogLayout.createSequentialGroup()
                        .addGroup(addPeerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(24, 24, 24)
                        .addGroup(addPeerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(urlOfPeer)
                            .addComponent(nameOfPeer, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))))
                .addContainerGap(159, Short.MAX_VALUE))
        );
        addPeerDialogLayout.setVerticalGroup(
            addPeerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPeerDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPeerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(urlOfPeer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addPeerDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(nameOfPeer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addPeerDialogButton)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);

        movieName.setText("Now Playing : ");

        peersList.setModel(new ConnectedPeers(peer));
        peersList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        peersList.setToolTipText("Available Peers");
        peersList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                peersListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(peersList);

        mediaList.setModel(new PeerMedia());
        mediaList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        mediaList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mediaListMousePressed(evt);
            }
        });
        mediaList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                mediaListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(mediaList);
        mediaList.getAccessibleContext().setAccessibleParent(jScrollPane1);

        addMovieButton.setText("Add Media");
        addMovieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMovieButtonActionPerformed(evt);
            }
        });

        addPeerButton.setText("Add Peer");
        addPeerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPeerButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        playButton.setText("Play");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Mute");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider2, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(playButton)
                        .addGap(18, 18, 18)
                        .addComponent(stopButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jToggleButton1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playButton)
                            .addComponent(stopButton)
                            .addComponent(jToggleButton1))))
                .addContainerGap())
        );

        portField.setText("8090");

        connectButton.setText("Start");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Port");

        jLabel10.setText("Name");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        jLabel11.setText("from selected peer");

        jScrollPane3.setViewportView(jList1);

        jLabel13.setText("Related media");

        jLabel14.setText("Pass");

        videoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Media"));
        videoPanel.setImage(null);
        videoPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                videoPanelMouseClicked(evt);
            }
        });

        updateMedia.setText("Update");
        updateMedia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMediaActionPerformed(evt);
            }
        });

        typeFilterOfPeer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Movies", "Audio", "Images", "Media" }));
        typeFilterOfPeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeFilterOfPeerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sharkImageLayout = new javax.swing.GroupLayout(sharkImage);
        sharkImage.setLayout(sharkImageLayout);
        sharkImageLayout.setHorizontalGroup(
            sharkImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 108, Short.MAX_VALUE)
        );
        sharkImageLayout.setVerticalGroup(
            sharkImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 59, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout p2ptubeImageLayout = new javax.swing.GroupLayout(p2ptubeImage);
        p2ptubeImage.setLayout(p2ptubeImageLayout);
        p2ptubeImageLayout.setHorizontalGroup(
            p2ptubeImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
        );
        p2ptubeImageLayout.setVerticalGroup(
            p2ptubeImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 59, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout staticImagesLayout = new javax.swing.GroupLayout(staticImages);
        staticImages.setLayout(staticImagesLayout);
        staticImagesLayout.setHorizontalGroup(
            staticImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(staticImagesLayout.createSequentialGroup()
                .addComponent(sharkImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(p2ptubeImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        staticImagesLayout.setVerticalGroup(
            staticImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(p2ptubeImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(sharkImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(movieName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addMovieButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPeerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addGap(2, 2, 2)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(connectButton))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(videoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(typeFilterOfPeer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(updateMedia))
                    .addComponent(jLabel13)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addComponent(staticImages, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addMovieButton)
                            .addComponent(addPeerButton)
                            .addComponent(jLabel10)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(connectButton))
                        .addGap(22, 22, 22)
                        .addComponent(movieName))
                    .addComponent(staticImages, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(videoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateMedia)
                            .addComponent(typeFilterOfPeer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        this.videoPanel.stopPlaying();
    }//GEN-LAST:event_playButtonActionPerformed

    private void addMovieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMovieButtonActionPerformed
        addMovieDialog.setVisible(true);
        addMovieDialog.setSize(600, 180);
        nameOfMedia.setText("");
        filenameTextField.setText("");
        //tagesOfMedia.setText("");
    }//GEN-LAST:event_addMovieButtonActionPerformed

    private void addPeerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPeerButtonActionPerformed
        addPeerDialog.setVisible(true);
        addPeerDialog.setSize(500, 180);
    }//GEN-LAST:event_addPeerButtonActionPerformed

    private void addMediaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMediaButtonActionPerformed
        int rVal = fileChooser.showOpenDialog(MainWindow.this);

        if (rVal == JFileChooser.APPROVE_OPTION) {
            File file = (fileChooser.getSelectedFile());
            filenameTextField.setText(file.toString());
        }
        if (rVal == JFileChooser.CANCEL_OPTION) {
        }
    }//GEN-LAST:event_addMediaButtonActionPerformed

    private void saveMediaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMediaButtonActionPerformed
        addMovieDialog.setVisible(false);
        String type = "";
        switch (mediaType.getSelectedIndex()) {
            case 0:
                type = P2PTubeKB.MOVIE_TYPE;
                break;
            case 1:
                type = P2PTubeKB.AUDIO_TYPE;
                break;
            case 2:
                type = P2PTubeKB.IMAGE_TYPE;
                break;
            case 3:
                type = P2PTubeKB.MEDIA_TYPE;
                break;
        }



        previewScreen.setVisible(true);
        previewScreen.setSize(500, 300);
        if (nameOfMedia.getText().length() != 0) {
            nameOfMediaInProgress.setText(nameOfMedia.getText());
            typeOfFile.setText(type);

            VideoPlayer vp = new VideoPlayer(previewVideoPanel);
            vp.setFilename(filenameTextField.getText());
            vp.startPlaying();

            this.peer.getKB().createNewMediaTag(type, nameOfMediaInProgress.getText(), new String[]{P2PTubeKB.MEDIA_URL + type + "/" + peer.getEngine().getOwner().getName() + "/" + nameOfMediaInProgress.getText()}, filenameTextField.getText());
            this.peer.getEngine().createAvailableMediaDataKP();
        } else {
            nameOfMediaInProgress.setText("No name was given! File was not processed.");
        }

    }//GEN-LAST:event_saveMediaButtonActionPerformed

    private void addPeerDialogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPeerDialogButtonActionPerformed
        ConnectedPeers model = (ConnectedPeers) peersList.getModel();
        model.addNewPeer(new String[]{urlOfPeer.getText(), nameOfPeer.getText()});
        addPeerDialog.setVisible(false);
    }//GEN-LAST:event_addPeerDialogButtonActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        //if (this.peer.isVerified()) {
        //login or logout?
        String filename = "/com/p2ptube/gui/resources/welcome.jpg";
        FileInputStream fis = null;
        if (peer != null && this.peer.isVerified()) {
            this.peer.stopEngine();
            connectButton.setText("Start");
            ConnectedPeers model = (ConnectedPeers) peersList.getModel();
            model.setPeer(null);
            model.removeAllElements();
            PeerMedia pm = (PeerMedia) this.mediaList.getModel();
            pm.removeAllElements();

        } else {
            this.peer = new P2PTubePeer(this.nameField.getText(), new String(this.passwordField.getPassword()), Integer.parseInt(this.portField.getText()));
            if (this.peer.isVerified()) {
                ConnectedPeers model = (ConnectedPeers) peersList.getModel();
                model.setPeer(this.peer);
                connectButton.setText("Log out");
                this.videoPanel.setVisible(true);
            } else {
                filename = "/com/p2ptube/gui/resources/wrongpass.jpg";
            }
        }

        try {
            BufferedImage bi = ImageIO.read(this.getClass().getResource(filename));
            videoPanel.setImage(bi);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_connectButtonActionPerformed

    private void peersListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_peersListValueChanged

        PeerMedia pm = (PeerMedia) this.mediaList.getModel();
        String type = "";
        switch (typeFilterOfPeer.getSelectedIndex()) {
            case 0:
                type = P2PTubeKB.MOVIE_TYPE;
                break;
            case 1:
                type = P2PTubeKB.AUDIO_TYPE;
                break;
            case 2:
                type = P2PTubeKB.IMAGE_TYPE;
                break;
            case 3:
                type = P2PTubeKB.MEDIA_TYPE;
                break;
        }

        if (this.peersList.getSelectedIndex() >= 0 && !this.peersList.getValueIsAdjusting()) {
            pm.setPeer(peer);
            pm.setType(type);
            PeerInList pil = (PeerInList) peersList.getSelectedValue();
            pm.setRemotePeerSI(/*P2PTubeKB.PEER_URL + (String) this.peersList.getSelectedValue()*/pil.getSI());
            pm.updateInfo();
            this.mediaList.repaint();
        } else {
            pm.clear();
        }
    }//GEN-LAST:event_peersListValueChanged

    private void mediaListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_mediaListValueChanged

        if (this.mediaList.getSelectedIndex() >= 0 && !this.mediaList.getValueIsAdjusting()) {
            this.peer.getEngine().stopDownloader();
            String type = "";
            switch (typeFilterOfPeer.getSelectedIndex()) {
                case 0:
                    type = P2PTubeKB.MOVIE_TYPE;
                    break;
                case 1:
                    type = P2PTubeKB.AUDIO_TYPE;
                    break;
                case 2:
                    type = P2PTubeKB.IMAGE_TYPE;
                    break;
                case 3:
                    type = P2PTubeKB.MEDIA_TYPE;
                    break;
            }
            PeerInList pil = (PeerInList) peersList.getSelectedValue();
            Hashtable vec = this.peer.getEngine().getAllMediaFromSpecificPeer(/*P2PTubeKB.PEER_URL + peersList.getSelectedValue()*/pil.getSI(), type);
            ElementInList element = (ElementInList) this.mediaList.getSelectedValue();
            Hashtable mediaInfo = (Hashtable) vec.get(element.getName());
            //Vector remotePeers = new Vector();
            //remotePeers.add(P2PTubeKB.PEER_URL + peersList.getSelectedValue());

            if (this.loader == null) {
                loader = new MediaLoader(peer, videoPanel, mediaInfo);
            } else {
                loader.setMedia(mediaInfo);
            }
            loader.start();
        }
    }//GEN-LAST:event_mediaListValueChanged

    private void updateMediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMediaActionPerformed
        this.updateLists();
    }//GEN-LAST:event_updateMediaActionPerformed

    private void updateLists() {
        int index = peersList.getSelectedIndex();
        ConnectedPeers model = (ConnectedPeers) peersList.getModel();
        model.setPeer(peer);
        peersList.setSelectedIndex(index);
        PeerMedia pm = (PeerMedia) this.mediaList.getModel();
        String type = "";
        switch (typeFilterOfPeer.getSelectedIndex()) {
            case 0:
                type = P2PTubeKB.MOVIE_TYPE;
                break;
            case 1:
                type = P2PTubeKB.AUDIO_TYPE;
                break;
            case 2:
                type = P2PTubeKB.IMAGE_TYPE;
                break;
            case 3:
                type = P2PTubeKB.MEDIA_TYPE;
                break;
        }
        if (this.peersList.getSelectedIndex() >= 0) {
            pm.setPeer(peer);
            pm.setType(type);
            PeerInList pil = (PeerInList) peersList.getSelectedValue();
            pm.setRemotePeerSI(/*P2PTubeKB.PEER_URL + (String) this.peersList.getSelectedValue()*/pil.getSI());
            pm.updateInfo();
            this.mediaList.repaint(); //Needed?!
        } else {
            pm.clear();
        }
    }

    private void typeFilterOfPeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeFilterOfPeerActionPerformed
        this.updateMediaActionPerformed(evt);
    }//GEN-LAST:event_typeFilterOfPeerActionPerformed

    private void previewCloseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previewCloseButtonActionPerformed
        this.previewVideoPanel.stopPlaying();
        this.previewScreen.setVisible(false);
    }//GEN-LAST:event_previewCloseButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        this.videoPanel.stopPlaying();
    }//GEN-LAST:event_stopButtonActionPerformed

    private void mediaListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mediaListMousePressed
        /*if (SwingUtilities.isRightMouseButton(evt)) {
        evt.get
        }*/
    }//GEN-LAST:event_mediaListMousePressed


    private void videoPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_videoPanelMouseClicked
        //Full Screen Implementation comes here... not so easy after all :-) 
    }//GEN-LAST:event_videoPanelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMediaButton;
    private javax.swing.JButton addMovieButton;
    private javax.swing.JDialog addMovieDialog;
    private javax.swing.JButton addPeerButton;
    private javax.swing.JDialog addPeerDialog;
    private javax.swing.JButton addPeerDialogButton;
    private javax.swing.JButton connectButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JTextField filenameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JList mediaList;
    private javax.swing.JComboBox mediaType;
    private javax.swing.JLabel movieName;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField nameOfMedia;
    private javax.swing.JTextField nameOfMediaInProgress;
    private javax.swing.JTextField nameOfPeer;
    private com.p2ptube.media.view.ImageDraw p2ptubeImage;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JList peersList;
    private javax.swing.JButton playButton;
    private javax.swing.JTextField portField;
    private javax.swing.JButton previewCloseButton;
    private javax.swing.JDialog previewScreen;
    private com.p2ptube.media.view.VideoPanel previewVideoPanel;
    private javax.swing.JButton saveMediaButton;
    private com.p2ptube.media.view.ImageDraw sharkImage;
    private javax.swing.JPanel staticImages;
    private javax.swing.JButton stopButton;
    private javax.swing.JComboBox typeFilterOfPeer;
    private javax.swing.JTextField typeOfFile;
    private javax.swing.JButton updateMedia;
    private javax.swing.JTextField urlOfPeer;
    private com.p2ptube.media.view.VideoPanel videoPanel;
    // End of variables declaration//GEN-END:variables
}
